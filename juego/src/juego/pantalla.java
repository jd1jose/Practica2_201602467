/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package juego;


import java.awt.Color;
import java.awt.GridLayout;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JPanel;

/**
 *
 * @author Jose David
 */
public class pantalla extends javax.swing.JFrame {
logica l =new logica();
 public  boton[][]botones; 
 public  int[][]num;
 int v=1000;

    public pantalla(String n) {
         initComponents();
        
         
         boton(n);
    }
 
    public pantalla() {
       
    }

   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jDialog1 = new javax.swing.JDialog();
        jDialog2 = new javax.swing.JDialog();
        jLabel2 = new javax.swing.JLabel();
        velocidad = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        start = new javax.swing.JButton();
        regresar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        panel1 = new javax.swing.JPanel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("velocidad");

        velocidad.setBackground(new java.awt.Color(51, 153, 255));
        velocidad.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        velocidad.setMajorTickSpacing(1);
        velocidad.setMaximum(10);
        velocidad.setMinimum(-10);
        velocidad.setMinorTickSpacing(1);
        velocidad.setPaintTicks(true);
        velocidad.setSnapToTicks(true);
        velocidad.setToolTipText("");
        velocidad.setValue(1);
        velocidad.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        velocidad.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                velocidadStateChanged(evt);
            }
        });

        jLabel1.setText("Juego de la vida");

        start.setText("Empezar");
        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startActionPerformed(evt);
            }
        });

        regresar.setText("regresar");
        regresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 609, Short.MAX_VALUE)
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(panel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(start, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(velocidad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(27, 27, 27)
                .addComponent(regresar)
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(start, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(velocidad, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(regresar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startActionPerformed
       if(start.getText().equals("Empezar")){
            
           l.start();
           start.setText("Parar");
          panel1.disable();
       }
       else if(start.getText().equals("Parar")){
       
           l.suspend();
           start.setText("Iniciar");
       }
       else if(start.getText().equals("Iniciar")){
            
           l.resume();
           start.setText("Parar");
       }
       
    }//GEN-LAST:event_startActionPerformed

    private void regresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regresarActionPerformed
      l.stop();
       pantallainicio j= new pantallainicio();
       j.show();
       this.hide();
    }//GEN-LAST:event_regresarActionPerformed

    private void velocidadStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_velocidadStateChanged
        
        if(velocidad.getValue()>0){
        
        v=1000*velocidad.getValue();
        
        }
        else if(velocidad.getValue()==0){
        v=1000;
        }
        else if(velocidad.getValue()<0){
    
            v=-1000/velocidad.getValue();
    
        }
        
       
    }//GEN-LAST:event_velocidadStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pantalla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pantalla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pantalla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pantalla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new pantalla().setVisible(true);
            }
        });
    }
 
  
  public void boton(String n){
   
      int tamaño = Integer.parseInt(n);
     botones= new boton [tamaño][tamaño];
     num=new int[tamaño][tamaño];
   panel1.setLayout(new GridLayout(tamaño,tamaño));
        for(int i=0;i<botones.length;i++){
       for(int j=0;j<botones[i].length;j++){
         
         botones[i][j]=new boton(i,j,20,20);
         
       panel1.add(botones[i][j]);
       }
      }
     panel1.updateUI();
  } 
      
 private class logica extends Thread {

 
    public void run(){
        while(true){
            
            try {
                int n=0;
                
                for(int i=0;i<botones.length;i++){
                    for(int j=0;j<botones[i].length;j++){
                        
                        
                        //lo de arriba
                        if(i==0&&j==0){
                            
                            if(botones[i][j+1].getBackground()==Color.BLUE){n=n+1;}
                            if(botones[i+1][j].getBackground()==Color.BLUE){n=n+1;}
                            if(botones[i+1][j+1].getBackground()==Color.BLUE){n=n+1;}
                        }
                        else if(i==0&&j>0&&i==0&&j<(botones[i].length-1)){
                          
                            if(botones[i][j-1].getBackground()==Color.BLUE){n=n+1;}
                            if(botones[i][j+1].getBackground()==Color.BLUE){n=n+1;}
                            if(botones[i+1][j-1].getBackground()==Color.BLUE){n=n+1;}
                            if(botones[i+1][j].getBackground()==Color.BLUE){n=n+1;}
                            if(botones[i+1][j+1].getBackground()==Color.BLUE){n=n+1;}
                        }
                        else if(i==0&&j==(botones[i].length-1)){
                          
                            if(botones[i][j-1].getBackground()==Color.BLUE){n=n+1;}
                            if(botones[i+1][j-1].getBackground()==Color.BLUE){n=n+1;}
                            if(botones[i+1][j].getBackground()==Color.BLUE){n=n+1;}
                            
                        }
                        //lados
                        else if(i>0&&i<(botones[i].length-1)&&j==0){
                            
                            if(botones[i-1][j].getBackground()==Color.BLUE){n=n+1;}
                            if(botones[i-1][j+1].getBackground()==Color.BLUE){n=n+1;}
                            if(botones[i][j+1].getBackground()==Color.BLUE){n=n+1;}
                            if(botones[i+1][j].getBackground()==Color.BLUE){n=n+1;}
                            if(botones[i+1][j+1].getBackground()==Color.BLUE){n=n+1;}
                        }
                        else if(i>0&&i<(botones[i].length-1)&&j==(botones[i].length-1)){
                             
                            if(botones[i-1][j].getBackground()==Color.BLUE){n=n+1;}
                            if(botones[i-1][j-1].getBackground()==Color.BLUE){n=n+1;}
                            if(botones[i][j-1].getBackground()==Color.BLUE){n=n+1;}
                            if(botones[i+1][j].getBackground()==Color.BLUE){n=n+1;}
                            if(botones[i+1][j-1].getBackground()==Color.BLUE){n=n+1;}
                        }
                        //lo de enmedio 
                        else if(i>0&&i<(botones[i].length-1)&&j>0&&j<(botones[i].length-1)){
                            
                            if(botones[i-1][j+1].getBackground()==Color.BLUE){n=n+1;}
                            if(botones[i-1][j].getBackground()==Color.BLUE){n=n+1;}
                            if(botones[i-1][j-1].getBackground()==Color.BLUE){n=n+1;}
                            if(botones[i][j+1].getBackground()==Color.BLUE){n=n+1;}
                            if(botones[i][j-1].getBackground()==Color.BLUE){n=n+1;}
                            if(botones[i+1][j].getBackground()==Color.BLUE){n=n+1;}
                            if(botones[i+1][j-1].getBackground()==Color.BLUE){n=n+1;}
                            if(botones[i+1][j+1].getBackground()==Color.BLUE){n=n+1;}
                           
                        }
                        //lo de abajo
                        else if(i==(botones[i].length-1)&&j==0){
                            
                            if(botones[i][j+1].getBackground()==Color.BLUE){n=n+1;}
                            if(botones[i-1][j].getBackground()==Color.BLUE){n=n+1;}
                            if(botones[i-1][j+1].getBackground()==Color.BLUE){n=n+1;}
                        }
                        else if(i==(botones[i].length-1)&&j>0&&i==(botones[i].length-1)&&j<(botones[i].length-1)){
                              
                            if(botones[i][j-1].getBackground()==Color.BLUE){n=n+1;}
                            if(botones[i][j+1].getBackground()==Color.BLUE){n=n+1;}
                            if(botones[i-1][j-1].getBackground()==Color.BLUE){n=n+1;}
                            if(botones[i-1][j].getBackground()==Color.BLUE){n=n+1;}
                            if(botones[i-1][j+1].getBackground()==Color.BLUE){n=n+1;}
                        }
                        else if(i==(botones[i].length-1)&&j==(botones[i].length-1)){
                         
                            if(botones[i][j-1].getBackground()==Color.BLUE){n=n+1;}
                            if(botones[i-1][j-1].getBackground()==Color.BLUE){n=n+1;}
                            if(botones[i-1][j].getBackground()==Color.BLUE){n=n+1;}
                            
                        }
                        // JOptionPane.showMessageDialog(this, "la celda ["+i+"] ["+j+"] lleva de n "+n);
                        if(botones[i][j].getBackground()==Color.BLUE){
                            if(n==2 || n==3)
                            {
                                // JOptionPane.showMessageDialog(this,"que tiene num["+i+"]["+j+"] " +num[i][j]+" y en n lleva "+n);
                                num[i][j]=1;
                                n=0;
                                
                            }
                            else if(n<2||n>3)
                            {
                                // JOptionPane.showMessageDialog(this,"que tiene num["+i+"]["+j+"] " +num[i][j]+" y en n lleva "+n);
                                num[i][j]=0;
                                n=0;
                            }
                        }
                        else{
                            
                            if(n==3){
                                num[i][j]=1;
                                n=0;
                            }
                            else{
                                num[i][j]=0;
                                n=0;
                            }
                            
                            
                        }
                        
                        
                    }
                    
                    
                }
                for(int i=0;i<num.length;i++){
                    for(int j=0;j<num[i].length;j++){
                        
                        if(num[i][j]==0){
                            
                            botones[i][j].setBackground(Color.LIGHT_GRAY);
                            botones[i][j].imagenm();
                        }
                        else if(num[i][j]==1){
                            botones[i][j].setBackground(Color.BLUE);
                             botones[i][j].imagenv();
                        }
                        
                        
                        System.out.print(num[i][j]);
                    }
                    System.out.println();
                    
                }
                
                Thread.sleep(v);
            } catch (InterruptedException ex) {
                Logger.getLogger(logica.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    
    }

    
}
 
  
  
    
 
 
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panel1;
    private javax.swing.JButton regresar;
    private javax.swing.JButton start;
    private javax.swing.JSlider velocidad;
    // End of variables declaration//GEN-END:variables
}
